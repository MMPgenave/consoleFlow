import QuestionCard from "@/components/shared/Card/QuestionCard";
import NoResult from "@/components/shared/NoResult/NoResult";
import LocalSearch from "@/components/shared/search/LocalSearch";
import { getQuestionsByTagId } from "@/lib/actions/tag.action";
import { URLProps } from "@/types";
import React from "react";

const TagDetailsPage = async ({ params, searchParams }: URLProps) => {
  const result = await getQuestionsByTagId({
    tagId: params.id,
    page: 1,
    searchQuery: searchParams.q,
  });
  return (
    <div>
      <h1 className="h1-bold text-dark100_light900 !uppercase ">{result!.tagName}</h1>
      <div className="mt-5 flex items-center gap-2 max-sm:flex-col max-sm:gap-3 ">
        <LocalSearch route={`/tags/${params.id}`} placeholder="Ø¬Ø³ØªØ¬Ùˆ Ø¯Ø± Ø³ÙˆØ§Ù„Ø§Øª Ù…Ø±Ø¨ÙˆØ· Ø¨Ù‡ Ø§ÛŒÙ† ØªÚ¯ Ù…Ø´Ø®Øµ ..." />
      </div>
      <div className="mt-12">
        {JSON.parse(JSON.stringify(result?.questions)).length > 0 ? (
          <div className="flex flex-col gap-6">
            {JSON.parse(JSON.stringify(result?.questions)).map((question: any) => {
              return <QuestionCard question={question} key={question._id} />;
            })}
          </div>
        ) : (
          <NoResult
            title="Ø³ÙˆØ§Ù„ÛŒ Ù…Ø±Ø¨ÙˆØ· Ø¨Ù‡ Ø§ÛŒÙ† ØªÚ¯ ÙˆØ¬ÙˆØ¯ Ù†Ø¯Ø§Ø±Ø¯"
            description="  Ø§ÙˆÙ„ÛŒÙ† Ú©Ø³ÛŒ Ø¨Ø§Ø´ÛŒØ¯ Ú©Ù‡ Ø³Ú©ÙˆØª Ø±Ø§ Ù…ÛŒ Ø´Ú©Ù†Ø¯! ðŸš€ ÛŒÚ© Ø³ÙˆØ§Ù„ Ø¨Ù¾Ø±Ø³ÛŒØ¯ Ùˆ Ø¨Ø­Ø« Ø±Ø§ Ø´Ø±ÙˆØ¹
          Ú©Ù†ÛŒØ¯. Ø¯Ø±Ø®ÙˆØ§Ø³Øª Ù…Ø§ Ù…ÛŒ ØªÙˆØ§Ù†Ø¯ Ú†ÛŒØ² Ø¨Ø²Ø±Ú¯ Ø¨Ø¹Ø¯ÛŒ Ø¨Ø§Ø´Ø¯ Ú©Ù‡ Ø¯ÛŒÚ¯Ø±Ø§Ù† Ø§Ø² Ø¢Ù† ÛŒØ§Ø¯ Ù…ÛŒ
          Ú¯ÛŒØ±Ù†Ø¯. Ù…Ø´Ø§Ø±Ú©Øª Ú©Ù†ÛŒØ¯! ðŸ’¡"
            button_href="/ask-question"
            button_content=" Ø³ÙˆØ§Ù„ÛŒ Ø¨Ù¾Ø±Ø³"
          />
        )}
      </div>
    </div>
  );
};

export default TagDetailsPage;
